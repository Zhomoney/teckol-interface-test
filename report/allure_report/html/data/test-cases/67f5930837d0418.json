{
  "uid" : "67f5930837d0418",
  "name" : "创作者分页数据，只查询平台twitch",
  "fullName" : "testcase#test_case_exec",
  "historyId" : "e764c278eecc6107ce277fb00c8b281a",
  "time" : {
    "start" : 1676971754500,
    "stop" : 1676971755198,
    "duration" : 698
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: 0 not in [],please check testcase of assertBody or submit a bug to the developer",
  "statusTrace" : "test_info = {'AssertResBody': 'res.code=200;res.data.records.0.platform=twitch;', 'AssertResCode': 200, 'AssertType': 'equal', 'VariableOperation': None, ...}\n\n    @pytest.mark.parametrize('test_info', testCaseList)\n    def test_case_exec(test_info):\n        allure.dynamic.title(test_info['name'])\n        allure.dynamic.description(test_info['remark'])\n    \n        if test_info['commonCaseId']:\n            login(test_info['commonCaseId'])\n        code, method, name = getCode(test_info['interfaceId'])\n        allure.dynamic.suite(code)\n        body, code = getBody(test_info['reqBody'], code)\n        headers = getHeader(test_info['reqHeader'])\n        # 接口请求\n        url = config.BASEURL + code\n        if method == 'get':\n            if not body:\n                body = \"{}\"\n            body = json.loads(body)\n            response = requests.get(url, body, headers=headers)  # 此时的body需要为字典\n        else:\n            response = requests.request(method=method,\n                                        url=url,\n                                        data=body,\n                                        headers=headers)\n        # 校验statusCode\n        assert response.status_code == int(test_info['AssertResCode'])\n        # 校验responseData\n        resData = json.loads(response.text)\n>       verify(test_info['AssertResBody'], resData, 'str equal')\n\ntestcase.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommon.py:154: in verify\n    resValue = iterationValue(keyList, resData)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nlists = ['res', 'data', 'records', '0', 'platform'], value = []\n\n    def iterationValue(lists, value):\n        '''\n    \n        :param lists: ['res','xxx','yyy']\n        :param value: {'xxx':{'yyy':'vvv'}}\n        :return:\n        '''\n        index = 1\n    \n        while index < len(lists):\n    \n            if lists[index].isdigit():\n                if isinstance(value, list):\n                    if not value:\n>                       assert False, lists[index] + \" not in \" + str(\n                            value) + \",please check testcase of assertBody or submit a bug to the developer\"\nE                       AssertionError: 0 not in [],please check testcase of assertBody or submit a bug to the developer\n\ncommon.py:246: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: 0 not in [],please check testcase of assertBody or submit a bug to the developer",
    "statusTrace" : "test_info = {'AssertResBody': 'res.code=200;res.data.records.0.platform=twitch;', 'AssertResCode': 200, 'AssertType': 'equal', 'VariableOperation': None, ...}\n\n    @pytest.mark.parametrize('test_info', testCaseList)\n    def test_case_exec(test_info):\n        allure.dynamic.title(test_info['name'])\n        allure.dynamic.description(test_info['remark'])\n    \n        if test_info['commonCaseId']:\n            login(test_info['commonCaseId'])\n        code, method, name = getCode(test_info['interfaceId'])\n        allure.dynamic.suite(code)\n        body, code = getBody(test_info['reqBody'], code)\n        headers = getHeader(test_info['reqHeader'])\n        # 接口请求\n        url = config.BASEURL + code\n        if method == 'get':\n            if not body:\n                body = \"{}\"\n            body = json.loads(body)\n            response = requests.get(url, body, headers=headers)  # 此时的body需要为字典\n        else:\n            response = requests.request(method=method,\n                                        url=url,\n                                        data=body,\n                                        headers=headers)\n        # 校验statusCode\n        assert response.status_code == int(test_info['AssertResCode'])\n        # 校验responseData\n        resData = json.loads(response.text)\n>       verify(test_info['AssertResBody'], resData, 'str equal')\n\ntestcase.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommon.py:154: in verify\n    resValue = iterationValue(keyList, resData)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nlists = ['res', 'data', 'records', '0', 'platform'], value = []\n\n    def iterationValue(lists, value):\n        '''\n    \n        :param lists: ['res','xxx','yyy']\n        :param value: {'xxx':{'yyy':'vvv'}}\n        :return:\n        '''\n        index = 1\n    \n        while index < len(lists):\n    \n            if lists[index].isdigit():\n                if isinstance(value, list):\n                    if not value:\n>                       assert False, lists[index] + \" not in \" + str(\n                            value) + \",please check testcase of assertBody or submit a bug to the developer\"\nE                       AssertionError: 0 not in [],please check testcase of assertBody or submit a bug to the developer\n\ncommon.py:246: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "3b86047f26deaaf1",
      "name" : "stdout",
      "source" : "3b86047f26deaaf1.txt",
      "type" : "text/plain",
      "size" : 254
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "/creatorBase/page"
  }, {
    "name" : "suite",
    "value" : "testcase"
  }, {
    "name" : "host",
    "value" : "SK-20220714XDVX"
  }, {
    "name" : "thread",
    "value" : "13476-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcase"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "test_info",
    "value" : "{'id': 18, 'name': '创作者分页数据，只查询平台twitch', 'remark': None, 'VariableOperation': None, 'interfaceId': 94, 'commonCaseId': 1, 'reqHeader': {'authorization': 'Bearer ${token}', 'cpmsToken': '${cpmsToken}'}, 'reqBody': {'current': 1, 'size': 40, 'sort': 1, 'name': '', 'page': True, 'platform': 'twitch'}, 'AssertResCode': 200, 'AssertType': 'equal', 'AssertResBody': 'res.code=200;res.data.records.0.platform=twitch;', 'setDown': None, 'successCount': None}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "67f5930837d0418.json",
  "parameterValues" : [ "{'id': 18, 'name': '创作者分页数据，只查询平台twitch', 'remark': None, 'VariableOperation': None, 'interfaceId': 94, 'commonCaseId': 1, 'reqHeader': {'authorization': 'Bearer ${token}', 'cpmsToken': '${cpmsToken}'}, 'reqBody': {'current': 1, 'size': 40, 'sort': 1, 'name': '', 'page': True, 'platform': 'twitch'}, 'AssertResCode': 200, 'AssertType': 'equal', 'AssertResBody': 'res.code=200;res.data.records.0.platform=twitch;', 'setDown': None, 'successCount': None}" ]
}