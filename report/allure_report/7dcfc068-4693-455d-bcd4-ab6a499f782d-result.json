{"name": "创作者分页数据，查询平台+互动率", "status": "failed", "statusDetails": {"message": "AssertionError: [value]responseValue:149852043 not equal to  verifyValue :50000", "trace": "test_info = {'AssertResBody': 'res.code=200;res.data.records.0.platform=tiktok;res.data.records.0.ttFollowers=50000;', 'AssertResCode': 200, 'AssertType': 'equal', 'VariableOperation': None, ...}\n\n    @pytest.mark.parametrize('test_info', testCaseList)\n    def test_case_exec(test_info):\n        allure.dynamic.title(test_info['name'])\n        allure.dynamic.description(test_info['remark'])\n    \n        if test_info['commonCaseId']:\n            login(test_info['commonCaseId'])\n        code, method, name = getCode(test_info['interfaceId'])\n        allure.dynamic.suite(code)\n        body, code = getBody(test_info['reqBody'], code)\n        headers = getHeader(test_info['reqHeader'])\n        # 接口请求\n        url = config.BASEURL + code\n        if method == 'get':\n            if not body:\n                body = \"{}\"\n            body = json.loads(body)\n            response = requests.get(url, body, headers=headers)  # 此时的body需要为字典\n        else:\n            response = requests.request(method=method,\n                                        url=url,\n                                        data=body,\n                                        headers=headers)\n        # 校验statusCode\n        assert response.status_code == int(test_info['AssertResCode'])\n        # 校验responseData\n        resData = json.loads(response.text)\n>       verify(test_info['AssertResBody'], resData, 'str equal')\n\ntestcase.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nverifyMsg = 'res.code=200;res.data.records.0.platform=tiktok;res.data.records.0.ttFollowers=50000;'\nresData = {'code': 200, 'data': {'countId': None, 'current': '1', 'hitCount': False, 'maxLimit': '157373', ...}, 'msg': 'success'}\nOperationType = 'str equal'\n\n    def verify(verifyMsg, resData, OperationType):\n        '''\n        assertBody\n        :param verifyMsg:需要校验的数据str ：'res.data.email=xxx;res.code=xxx;'\n        :param resData: 返回的resData:字典\n        :param type: 暂无用处\n        :return:\n        '''\n        assertList = verifyMsg.split(';')\n        for i in assertList:\n            if i != '':\n                operation = '='\n                if '=' in i:\n                    operation = '='\n                elif ' IN ' in i:\n                    operation = ' IN '\n                elif ' CONTAINS ' in i:\n                    operation = ' CONTAINS '\n                oldKey = i.split(operation, 1)[0].strip()\n                verifyValue = i.split(operation, 1)[1].strip()\n                keyList = oldKey.split('.')\n                # 获取返回要校验的值\n                resValue = iterationValue(keyList, resData)\n                # 替换testcase verify的值\n                verifyValue = variableReplace(verifyValue)\n                if 'sqlSearch(' in verifyValue and ')' == verifyValue[-1]:\n                    verifyValue = SearchSql(verifyValue)\n    \n                if operation == '=':\n                    verifyValue = str(verifyValue)\n                    resValue = str(resValue)\n>                   assert verifyValue == resValue, \"[value]responseValue:\" + str(\n                        resValue) + \" not equal to  verifyValue :\" + str(\nE                       AssertionError: [value]responseValue:149852043 not equal to  verifyValue :50000\n\ncommon.py:163: AssertionError"}, "description": "TODO,AssertResBody没写完", "attachments": [{"name": "stdout", "source": "a4d3ae86-f51f-4c4b-90fd-a107126109e1-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_info", "value": "{'id': 25, 'name': '创作者分页数据，查询平台+互动率', 'remark': 'TODO,AssertResBody没写完', 'VariableOperation': None, 'interfaceId': 94, 'commonCaseId': 1, 'reqHeader': {'authorization': 'Bearer ${token}', 'cpmsToken': '${cpmsToken}'}, 'reqBody': {'current': 1, 'size': 40, 'sort': 1, 'name': '', 'page': True, 'interactionRateMax': '20', 'interactionRateMin': '0', 'platform': 'tiktok'}, 'AssertResCode': 200, 'AssertType': 'equal', 'AssertResBody': 'res.code=200;res.data.records.0.platform=tiktok;res.data.records.0.ttFollowers=50000;', 'setDown': None, 'successCount': None}"}], "start": 1676971770100, "stop": 1676971771784, "uuid": "887d2f0d-d056-4342-9808-deef1f3461de", "historyId": "64b80c0f6b064ae08ea696234309693d", "testCaseId": "9c31d5e199285c96d56c26b1832ea7d4", "fullName": "testcase#test_case_exec", "labels": [{"name": "suite", "value": "/creatorBase/page"}, {"name": "suite", "value": "testcase"}, {"name": "host", "value": "SK-20220714XDVX"}, {"name": "thread", "value": "13476-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase"}]}