{"name": "创作者分页数据，只查询平台instagram", "status": "failed", "statusDetails": {"message": "AssertionError: 0 not in [],please check testcase of assertBody or submit a bug to the developer", "trace": "test_info = {'AssertResBody': 'res.code=200;res.data.records.0.platform=instagram;', 'AssertResCode': 200, 'AssertType': 'equal', 'VariableOperation': None, ...}\n\n    @pytest.mark.parametrize('test_info', testCaseList)\n    def test_case_exec(test_info):\n        allure.dynamic.title(test_info['name'])\n        allure.dynamic.description(test_info['remark'])\n    \n        if test_info['commonCaseId']:\n            login(test_info['commonCaseId'])\n        code, method, name = getCode(test_info['interfaceId'])\n        allure.dynamic.suite(code)\n        body, code = getBody(test_info['reqBody'], code)\n        headers = getHeader(test_info['reqHeader'])\n        # 接口请求\n        url = config.BASEURL + code\n        if method == 'get':\n            if not body:\n                body = \"{}\"\n            body = json.loads(body)\n            response = requests.get(url, body, headers=headers)  # 此时的body需要为字典\n        else:\n            response = requests.request(method=method,\n                                        url=url,\n                                        data=body,\n                                        headers=headers)\n        # 校验statusCode\n        assert response.status_code == int(test_info['AssertResCode'])\n        # 校验responseData\n        resData = json.loads(response.text)\n>       verify(test_info['AssertResBody'], resData, 'str equal')\n\ntestcase.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommon.py:154: in verify\n    resValue = iterationValue(keyList, resData)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nlists = ['res', 'data', 'records', '0', 'platform'], value = []\n\n    def iterationValue(lists, value):\n        '''\n    \n        :param lists: ['res','xxx','yyy']\n        :param value: {'xxx':{'yyy':'vvv'}}\n        :return:\n        '''\n        index = 1\n    \n        while index < len(lists):\n    \n            if lists[index].isdigit():\n                if isinstance(value, list):\n                    if not value:\n>                       assert False, lists[index] + \" not in \" + str(\n                            value) + \",please check testcase of assertBody or submit a bug to the developer\"\nE                       AssertionError: 0 not in [],please check testcase of assertBody or submit a bug to the developer\n\ncommon.py:246: AssertionError"}, "attachments": [{"name": "stdout", "source": "768749bc-5190-4c78-a51d-17ff0da86c7b-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_info", "value": "{'id': 17, 'name': '创作者分页数据，只查询平台instagram', 'remark': None, 'VariableOperation': None, 'interfaceId': 94, 'commonCaseId': 1, 'reqHeader': {'authorization': 'Bearer ${token}', 'cpmsToken': '${cpmsToken}'}, 'reqBody': {'current': 1, 'size': 40, 'sort': 1, 'name': '', 'page': True, 'platform': 'instagram'}, 'AssertResCode': 200, 'AssertType': 'equal', 'AssertResBody': 'res.code=200;res.data.records.0.platform=instagram;', 'setDown': None, 'successCount': None}"}], "start": 1676971753701, "stop": 1676971754486, "uuid": "05053094-1528-4b1f-8bc4-56a9a33a19c0", "historyId": "f66b7b448be005c6981dd2c34f2c4359", "testCaseId": "9c31d5e199285c96d56c26b1832ea7d4", "fullName": "testcase#test_case_exec", "labels": [{"name": "suite", "value": "/creatorBase/page"}, {"name": "suite", "value": "testcase"}, {"name": "host", "value": "SK-20220714XDVX"}, {"name": "thread", "value": "13476-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase"}]}